    server {
        listen 80;
        server_name 217.15.163.145 vpoll.com.my www.vpoll.com.my;
        server_tokens off;

        proxy_connect_timeout   120;
        proxy_send_timeout      120;
        proxy_read_timeout      120;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;
        server_name vpoll.com.my www.vpoll.com.my;
        server_tokens off;

        root /var/www/app;
        index index.html;

        ssl_certificate /etc/letsencrypt/live/vpoll.com.my/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/vpoll.com.my/privkey.pem;

        include /etc/letsencrypt/options-ssl-nginx.conf;
        include /etc/nginx/mime.types;

        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;


        # set client body size to 10M #
        client_max_body_size 20M;
        proxy_connect_timeout   120;
        proxy_send_timeout      120;
        proxy_read_timeout      120;

        # API location
        location /api {
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_pass http://backend:8001;
        }

        # Location for Socket.IO specifically
        location /socket.io/ {
            # Add CORS headers for actual (non-OPTIONS) requests to this location
            # Let backend handle OPTIONS preflight
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            proxy_read_timeout 86400s; # Long timeout for polling
            proxy_send_timeout 86400s;

            proxy_pass http://backend:8001/socket.io/;
        }

        # Legacy/Direct WebSocket endpoint
        location /ws {
             # Add CORS headers for actual (non-OPTIONS) requests to this location
             # Let backend handle OPTIONS preflight
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_pass http://backend:8001/api; # Assuming /api handles raw WS connection
        }

        # Location for the frontend application
        location / {
            # Generally no CORS needed here unless loading assets cross-origin
            root /var/www/app; # Assuming frontend files are served from here by nginx
            index index.html;
            try_files $uri $uri/ /index.html; # For Angular routing

            # If still proxying to Angular dev server:
            # proxy_pass http://frontend:4200;
            # proxy_s_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /zoom {
            # Add CORS headers for actual (non-OPTIONS) requests to this location
            # Let target server handle OPTIONS preflight
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_cache_bypass $http_upgrade;
            proxy_pass http://217.15.163.145:4000;
        }
    }


    server {
    listen 80;
    server_name zoom.vpoll.com.my;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name zoom.vpoll.com.my;

    ssl_certificate /etc/letsencrypt/live/vpoll.com.my/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/vpoll.com.my/privkey.pem;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    include /etc/nginx/mime.types;

    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        # Add necessary CORS headers for non-OPTIONS requests if the target server requires them
        # Let target server handle OPTIONS preflight
        add_header 'Access-Control-Allow-Origin' '*' always;

        proxy_pass http://217.15.163.145:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}
